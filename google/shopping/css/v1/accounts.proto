// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.shopping.css.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option go_package = "cloud.google.com/go/shopping/css/apiv1/csspb;csspb";
option java_multiple_files = true;
option java_outer_classname = "AccountsProto";
option java_package = "com.google.shopping.css.v1";

// Service for managing CSS/MC account information.
service AccountsService {
  option (google.api.default_host) = "css.googleapis.com";
  option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/content";

  // Retrieves a single CSS/MC account by ID.
  rpc GetAccount(GetAccountRequest) returns (Account) {
    option (google.api.http) = {
      get: "/v1/{name=accounts/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Updates labels assigned to CSS/MC accounts by a CSS domain.
  rpc UpdateLabels(UpdateAccountLabelsRequest) returns (Account) {
    option (google.api.http) = {
      post: "/v1/{name=accounts/*}:updateLabels"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }
}

// The request message for the `GetAccount` method.
message GetAccountRequest {
  // Required. The name of the managed CSS/MC account.
  // Format: accounts/{account}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = { type: "css.googleapis.com/Account" }
  ];
}

// The request message for the `UpdateLabels` method.
message UpdateAccountLabelsRequest {
  // The label resource name.
  // Format: accounts/{account}
  string name = 1 [
    (google.api.resource_reference) = { type: "css.googleapis.com/Account" }
  ];

  // The list of label IDs to overwrite the existing account label IDs.
  // If the list is empty, all currently assigned label IDs will be deleted.
  repeated int64 label_ids = 2;
}

// Information about CSS/MC account.
message Account {
  option (google.api.resource) = {
    type: "css.googleapis.com/Account"
    pattern: "accounts/{account}"
    plural: "accounts"
    singular: "account"
  };

  // The account type.
  enum AccountType {
    // Unknown account type.
    ACCOUNT_TYPE_UNSPECIFIED = 0;

    // Merchant account.
    MC = 1;

    // CSS domain account.
    CSS_DOMAIN = 2;

    // CSS group account.
    CSS_GROUP = 3;
  }

  // The label resource name.
  // Format: accounts/{account}
  string name = 1;

  // Output only. Immutable. The CSS/MC account's full name.
  string full_name = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // The CSS/MC account's display name.
  optional string display_name = 3;

  // Output only. Immutable. The CSS domain's homepage.
  optional string homepage_uri = 4 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // The CSS/MC parent resource. CSS group ID for CSS domain, CSS domain ID for
  // MC account. Returned only if the user has access to the parent account.
  optional string parent = 5;

  // Manually created label IDs assigned to the account by CSS.
  repeated int64 label_ids = 6;

  // Automatically created label IDs assigned to the account by
  // CSS Center.
  repeated int64 automatic_label_ids = 7;

  // Output only. The type of this account.
  AccountType account_type = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
}
